{"filter":false,"title":"mongo_project.py","tooltip":"/mongo_project.py","undoManager":{"mark":31,"position":31,"stack":[[{"start":{"row":0,"column":0},"end":{"row":13,"column":53},"action":"insert","lines":["import pymongo","import os","","MONGODB_URI = os.getenv(\"MONGO_URI\")","DBS_NAME = \"myTestDB\"","COLLECTION_NAME = \"myFirstMDB\"","","def mongo_connect(url):","    try:","        conn = pymongo.MongoClient(url)","        print(\"Mongo is connected!\")","        return conn","    except pymongo.errors.ConnectionFailure as e:","        print(\"Could not connect to MongoDB: %s\") % e"],"id":1}],[{"start":{"row":10,"column":0},"end":{"row":10,"column":36},"action":"remove","lines":["        print(\"Mongo is connected!\")"],"id":2},{"start":{"row":9,"column":39},"end":{"row":10,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":12,"column":53},"action":"remove","lines":["import pymongo","import os","","MONGODB_URI = os.getenv(\"MONGO_URI\")","DBS_NAME = \"myTestDB\"","COLLECTION_NAME = \"myFirstMDB\"","","def mongo_connect(url):","    try:","        conn = pymongo.MongoClient(url)","        return conn","    except pymongo.errors.ConnectionFailure as e:","        print(\"Could not connect to MongoDB: %s\") % e"],"id":3},{"start":{"row":0,"column":0},"end":{"row":50,"column":11},"action":"insert","lines":["import pymongo","import os","","MONGODB_URI = os.getenv(\"MONGO_URI\")","DBS_NAME = \"myTestDB\"","COLLECTION_NAME = \"myFirstMDB\"","","def mongo_connect(url):","    try:","        conn = pymongo.MongoClient(url)","        print(\"Mongo is connected!\")","        return conn","    except pymongo.errors.ConnectionFailure as e:","        print(\"Could not connect to MongoDB: %s\") % e","","","def show_menu():","    print(\"\")","    print(\"1. Add a record\")","    print(\"2. Find a record by name\")","    print(\"3. Edit a record\")","    print(\"4. Delete a record\")","    print(\"5. Exit\")","","    option = input(\"Enter option: \")","    return option","","","def main_loop():","    while True:","        option = show_menu()","        if option == \"1\":","            print(\"You have selected option 1\")","        elif option == \"2\":","            print(\"You have selected option 2\")","        elif option == \"3\":","            print(\"You have selected option 3\")","        elif option == \"4\":","            print(\"You have selected option 4\")","        elif option == \"5\":","            conn.close()","            break","        else:","            print(\"Invalid option\")","        print(\"\")","","","conn = mongo_connect(MONGODB_URI)","coll = conn[DBS_NAME][COLLECTION_NAME]","","main_loop()"]}],[{"start":{"row":10,"column":0},"end":{"row":10,"column":36},"action":"remove","lines":["        print(\"Mongo is connected!\")"],"id":4},{"start":{"row":9,"column":39},"end":{"row":10,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":49,"column":11},"action":"remove","lines":["import pymongo","import os","","MONGODB_URI = os.getenv(\"MONGO_URI\")","DBS_NAME = \"myTestDB\"","COLLECTION_NAME = \"myFirstMDB\"","","def mongo_connect(url):","    try:","        conn = pymongo.MongoClient(url)","        return conn","    except pymongo.errors.ConnectionFailure as e:","        print(\"Could not connect to MongoDB: %s\") % e","","","def show_menu():","    print(\"\")","    print(\"1. Add a record\")","    print(\"2. Find a record by name\")","    print(\"3. Edit a record\")","    print(\"4. Delete a record\")","    print(\"5. Exit\")","","    option = input(\"Enter option: \")","    return option","","","def main_loop():","    while True:","        option = show_menu()","        if option == \"1\":","            print(\"You have selected option 1\")","        elif option == \"2\":","            print(\"You have selected option 2\")","        elif option == \"3\":","            print(\"You have selected option 3\")","        elif option == \"4\":","            print(\"You have selected option 4\")","        elif option == \"5\":","            conn.close()","            break","        else:","            print(\"Invalid option\")","        print(\"\")","","","conn = mongo_connect(MONGODB_URI)","coll = conn[DBS_NAME][COLLECTION_NAME]","","main_loop()"],"id":5},{"start":{"row":0,"column":0},"end":{"row":90,"column":11},"action":"insert","lines":["import pymongo","import os","","MONGODB_URI = os.getenv(\"MONGO_URI\")","DBS_NAME = \"myTestDB\"","COLLECTION_NAME = \"myFirstMDB\"","","def mongo_connect(url):","    try:","        conn = pymongo.MongoClient(url)","        print(\"Mongo is connected!\")","        return conn","    except pymongo.errors.ConnectionFailure as e:","        print(\"Could not connect to MongoDB: %s\") % e","","","def get_record():","    print(\"\")","    first = input(\"Enter first name > \")","    last = input(\"Enter last name > \")","","    try:","        doc = coll.find_one({'first': first.lower(), 'last': last.lower()})","    except:","        print(\"Error accessing the database\")","    ","    if not doc:","        print(\"\")","        print(\"Error! No results found.\")","    ","    return doc","","","","def show_menu():","    print(\"\")","    print(\"1. Add a record\")","    print(\"2. Find a record by name\")","    print(\"3. Edit a record\")","    print(\"4. Delete a record\")","    print(\"5. Exit\")","","    option = input(\"Enter option: \")","    return option","","","def add_record():","    print(\"\")","    first = input(\"Enter first name > \")","    last = input(\"Enter last name > \")","    dob = input(\"Enter date of birth > \")","    gender = input(\"Enter gender > \")","    hair_colour = input(\"Enter hair colour > \")","    occupation = input(\"Enter occupation > \")","    nationality = input(\"Enter nationality > \")","","    new_doc = {'first': first.lower(), 'last': last.lower(), 'dob': dob,","               'gender': gender, 'hair_colour': hair_colour, 'occupation':","               occupation, 'nationality': nationality}","    ","    try:","        coll.insert(new_doc)","        print(\"\")","        print(\"Document inserted\")","    except:","        print(\"Error accessing the database\")","","","def main_loop():","    while True:","        option = show_menu()","        if option == \"1\":","            add_record()","        elif option == \"2\":","            print(\"You have selected option 2\")","        elif option == \"3\":","            print(\"You have selected option 3\")","        elif option == \"4\":","            print(\"You have selected option 4\")","        elif option == \"5\":","            conn.close()","            break","        else:","            print(\"Invalid option\")","        print(\"\")","","","conn = mongo_connect(MONGODB_URI)","coll = conn[DBS_NAME][COLLECTION_NAME]","","main_loop()"]}],[{"start":{"row":0,"column":0},"end":{"row":90,"column":11},"action":"remove","lines":["import pymongo","import os","","MONGODB_URI = os.getenv(\"MONGO_URI\")","DBS_NAME = \"myTestDB\"","COLLECTION_NAME = \"myFirstMDB\"","","def mongo_connect(url):","    try:","        conn = pymongo.MongoClient(url)","        print(\"Mongo is connected!\")","        return conn","    except pymongo.errors.ConnectionFailure as e:","        print(\"Could not connect to MongoDB: %s\") % e","","","def get_record():","    print(\"\")","    first = input(\"Enter first name > \")","    last = input(\"Enter last name > \")","","    try:","        doc = coll.find_one({'first': first.lower(), 'last': last.lower()})","    except:","        print(\"Error accessing the database\")","    ","    if not doc:","        print(\"\")","        print(\"Error! No results found.\")","    ","    return doc","","","","def show_menu():","    print(\"\")","    print(\"1. Add a record\")","    print(\"2. Find a record by name\")","    print(\"3. Edit a record\")","    print(\"4. Delete a record\")","    print(\"5. Exit\")","","    option = input(\"Enter option: \")","    return option","","","def add_record():","    print(\"\")","    first = input(\"Enter first name > \")","    last = input(\"Enter last name > \")","    dob = input(\"Enter date of birth > \")","    gender = input(\"Enter gender > \")","    hair_colour = input(\"Enter hair colour > \")","    occupation = input(\"Enter occupation > \")","    nationality = input(\"Enter nationality > \")","","    new_doc = {'first': first.lower(), 'last': last.lower(), 'dob': dob,","               'gender': gender, 'hair_colour': hair_colour, 'occupation':","               occupation, 'nationality': nationality}","    ","    try:","        coll.insert(new_doc)","        print(\"\")","        print(\"Document inserted\")","    except:","        print(\"Error accessing the database\")","","","def main_loop():","    while True:","        option = show_menu()","        if option == \"1\":","            add_record()","        elif option == \"2\":","            print(\"You have selected option 2\")","        elif option == \"3\":","            print(\"You have selected option 3\")","        elif option == \"4\":","            print(\"You have selected option 4\")","        elif option == \"5\":","            conn.close()","            break","        else:","            print(\"Invalid option\")","        print(\"\")","","","conn = mongo_connect(MONGODB_URI)","coll = conn[DBS_NAME][COLLECTION_NAME]","","main_loop()"],"id":6},{"start":{"row":0,"column":0},"end":{"row":140,"column":11},"action":"insert","lines":["import pymongo","import os","","MONGODB_URI = os.getenv(\"MONGO_URI\")","DBS_NAME = \"myTestDB\"","COLLECTION_NAME = \"myFirstMDB\"","","def mongo_connect(url):","    try:","        conn = pymongo.MongoClient(url)","        print(\"Mongo is connected!\")","        return conn","    except pymongo.errors.ConnectionFailure as e:","        print(\"Could not connect to MongoDB: %s\") % e","","","def get_record():","    print(\"\")","    first = input(\"Enter first name > \")","    last = input(\"Enter last name > \")","","    try:","        doc = coll.find_one({'first': first.lower(), 'last': last.lower()})","    except:","        print(\"Error accessing the database\")","    ","    if not doc:","        print(\"\")","        print(\"Error! No results found.\")","    ","    return doc","","","def show_menu():","    print(\"\")","    print(\"1. Add a record\")","    print(\"2. Find a record by name\")","    print(\"3. Edit a record\")","    print(\"4. Delete a record\")","    print(\"5. Exit\")","","    option = input(\"Enter option: \")","    return option","","","def add_record():","    print(\"\")","    first = input(\"Enter first name > \")","    last = input(\"Enter last name > \")","    dob = input(\"Enter date of birth > \")","    gender = input(\"Enter gender > \")","    hair_colour = input(\"Enter hair colour > \")","    occupation = input(\"Enter occupation > \")","    nationality = input(\"Enter nationality > \")","","    new_doc = {'first': first.lower(), 'last': last.lower(), 'dob': dob,","               'gender': gender, 'hair_colour': hair_colour, 'occupation':","               occupation, 'nationality': nationality}","    ","    try:","        coll.insert(new_doc)","        print(\"\")","        print(\"Document inserted\")","    except:","        print(\"Error accessing the database\")","","","def find_record():","    doc = get_record()","    if doc:","        print(\"\")","        for k, v in doc.items():","            if k != \"_id\":","                print(k.capitalize() + \": \" + v.capitalize())","","","def edit_record():","    doc = get_record()","    if doc:","        update_doc = {}","        print(\"\")","        for k, v in doc.items():","            if k != \"_id\":","                update_doc[k] = input(k.capitalize() + \" [\" + v + \"] > \")","","                if update_doc[k] == \"\":","                    update_doc[k] = v","        ","        try:","            coll.update_one(doc, {'$set': update_doc})","            print(\"\")","            print(\"Document updated\")","        except:","            print(\"Error accessing the database\")","","","def delete_record():","","    doc = get_record()","","    if doc:","        print(\"\")","        for k, v in doc.items():","            if k != \"_id\":","                print(k.capitalize() + \": \" + v.capitalize())","        ","        print(\"\")","        confirmation = input(\"Is this the document you want to delete?\\nY or N > \")","        print(\"\")","","        if confirmation.lower() == 'y':","            try:","                coll.remove(doc)","                print(\"Document deleted!\")","            except:","                print(\"Document not deleted\")","","","def main_loop():","    while True:","        option = show_menu()","        if option == \"1\":","            add_record()","        elif option == \"2\":","            find_record()","        elif option == \"3\":","            edit_record()","        elif option == \"4\":","            delete_record()","        elif option == \"5\":","            conn.close()","            break","        else:","            print(\"Invalid option\")","        print(\"\")","","","conn = mongo_connect(MONGODB_URI)","coll = conn[DBS_NAME][COLLECTION_NAME]","","main_loop()"]}],[{"start":{"row":84,"column":0},"end":{"row":85,"column":0},"action":"insert","lines":["",""],"id":7}],[{"start":{"row":85,"column":0},"end":{"row":85,"column":1},"action":"insert","lines":["£"],"id":8}],[{"start":{"row":85,"column":0},"end":{"row":85,"column":1},"action":"remove","lines":["£"],"id":9}],[{"start":{"row":85,"column":0},"end":{"row":85,"column":1},"action":"insert","lines":["#"],"id":10},{"start":{"row":85,"column":1},"end":{"row":85,"column":2},"action":"insert","lines":["T"]}],[{"start":{"row":85,"column":2},"end":{"row":85,"column":3},"action":"insert","lines":["H"],"id":11},{"start":{"row":85,"column":3},"end":{"row":85,"column":4},"action":"insert","lines":["e"]}],[{"start":{"row":85,"column":4},"end":{"row":85,"column":5},"action":"insert","lines":[" "],"id":12},{"start":{"row":85,"column":5},"end":{"row":85,"column":6},"action":"insert","lines":["b"]}],[{"start":{"row":85,"column":5},"end":{"row":85,"column":6},"action":"remove","lines":["b"],"id":13},{"start":{"row":85,"column":4},"end":{"row":85,"column":5},"action":"remove","lines":[" "]},{"start":{"row":85,"column":3},"end":{"row":85,"column":4},"action":"remove","lines":["e"]},{"start":{"row":85,"column":2},"end":{"row":85,"column":3},"action":"remove","lines":["H"]}],[{"start":{"row":85,"column":2},"end":{"row":85,"column":3},"action":"insert","lines":["h"],"id":14},{"start":{"row":85,"column":3},"end":{"row":85,"column":4},"action":"insert","lines":["e"]}],[{"start":{"row":85,"column":4},"end":{"row":85,"column":5},"action":"insert","lines":[" "],"id":15},{"start":{"row":85,"column":5},"end":{"row":85,"column":6},"action":"insert","lines":["b"]},{"start":{"row":85,"column":6},"end":{"row":85,"column":7},"action":"insert","lines":["e"]},{"start":{"row":85,"column":7},"end":{"row":85,"column":8},"action":"insert","lines":["l"]},{"start":{"row":85,"column":8},"end":{"row":85,"column":9},"action":"insert","lines":["o"]},{"start":{"row":85,"column":9},"end":{"row":85,"column":10},"action":"insert","lines":["w"]}],[{"start":{"row":85,"column":10},"end":{"row":85,"column":11},"action":"insert","lines":[" "],"id":16},{"start":{"row":85,"column":11},"end":{"row":85,"column":12},"action":"insert","lines":["o"]}],[{"start":{"row":85,"column":11},"end":{"row":85,"column":12},"action":"remove","lines":["o"],"id":17}],[{"start":{"row":85,"column":11},"end":{"row":85,"column":12},"action":"insert","lines":["s"],"id":18},{"start":{"row":85,"column":12},"end":{"row":85,"column":13},"action":"insert","lines":["t"]},{"start":{"row":85,"column":13},"end":{"row":85,"column":14},"action":"insert","lines":["o"]},{"start":{"row":85,"column":14},"end":{"row":85,"column":15},"action":"insert","lines":["p"]},{"start":{"row":85,"column":15},"end":{"row":85,"column":16},"action":"insert","lines":["s"]}],[{"start":{"row":85,"column":16},"end":{"row":85,"column":17},"action":"insert","lines":[" "],"id":19},{"start":{"row":85,"column":17},"end":{"row":85,"column":18},"action":"insert","lines":["t"]},{"start":{"row":85,"column":18},"end":{"row":85,"column":19},"action":"insert","lines":["h"]},{"start":{"row":85,"column":19},"end":{"row":85,"column":20},"action":"insert","lines":["e"]}],[{"start":{"row":85,"column":20},"end":{"row":85,"column":21},"action":"insert","lines":[" "],"id":20},{"start":{"row":85,"column":21},"end":{"row":85,"column":22},"action":"insert","lines":["c"]},{"start":{"row":85,"column":22},"end":{"row":85,"column":23},"action":"insert","lines":["o"]},{"start":{"row":85,"column":23},"end":{"row":85,"column":24},"action":"insert","lines":["n"]},{"start":{"row":85,"column":24},"end":{"row":85,"column":25},"action":"insert","lines":["t"]},{"start":{"row":85,"column":25},"end":{"row":85,"column":26},"action":"insert","lines":["e"]},{"start":{"row":85,"column":26},"end":{"row":85,"column":27},"action":"insert","lines":["n"]},{"start":{"row":85,"column":27},"end":{"row":85,"column":28},"action":"insert","lines":["t"]}],[{"start":{"row":85,"column":28},"end":{"row":85,"column":29},"action":"insert","lines":[" "],"id":21},{"start":{"row":85,"column":29},"end":{"row":85,"column":30},"action":"insert","lines":["b"]},{"start":{"row":85,"column":30},"end":{"row":85,"column":31},"action":"insert","lines":["e"]},{"start":{"row":85,"column":31},"end":{"row":85,"column":32},"action":"insert","lines":["i"]},{"start":{"row":85,"column":32},"end":{"row":85,"column":33},"action":"insert","lines":["n"]},{"start":{"row":85,"column":33},"end":{"row":85,"column":34},"action":"insert","lines":["g"]}],[{"start":{"row":85,"column":34},"end":{"row":85,"column":35},"action":"insert","lines":[" "],"id":22},{"start":{"row":85,"column":35},"end":{"row":85,"column":36},"action":"insert","lines":["d"]},{"start":{"row":85,"column":36},"end":{"row":85,"column":37},"action":"insert","lines":["e"]},{"start":{"row":85,"column":37},"end":{"row":85,"column":38},"action":"insert","lines":["l"]},{"start":{"row":85,"column":38},"end":{"row":85,"column":39},"action":"insert","lines":["i"]}],[{"start":{"row":85,"column":38},"end":{"row":85,"column":39},"action":"remove","lines":["i"],"id":23}],[{"start":{"row":85,"column":38},"end":{"row":85,"column":39},"action":"insert","lines":["e"],"id":24},{"start":{"row":85,"column":39},"end":{"row":85,"column":40},"action":"insert","lines":["t"]},{"start":{"row":85,"column":40},"end":{"row":85,"column":41},"action":"insert","lines":["e"]},{"start":{"row":85,"column":41},"end":{"row":85,"column":42},"action":"insert","lines":["d"]}],[{"start":{"row":85,"column":42},"end":{"row":85,"column":43},"action":"insert","lines":[" "],"id":25},{"start":{"row":85,"column":43},"end":{"row":85,"column":44},"action":"insert","lines":["i"]},{"start":{"row":85,"column":44},"end":{"row":85,"column":45},"action":"insert","lines":["f"]}],[{"start":{"row":85,"column":45},"end":{"row":85,"column":46},"action":"insert","lines":[" "],"id":26},{"start":{"row":85,"column":46},"end":{"row":85,"column":47},"action":"insert","lines":["p"]},{"start":{"row":85,"column":47},"end":{"row":85,"column":48},"action":"insert","lines":["e"]},{"start":{"row":85,"column":48},"end":{"row":85,"column":49},"action":"insert","lines":["r"]},{"start":{"row":85,"column":49},"end":{"row":85,"column":50},"action":"insert","lines":["s"]},{"start":{"row":85,"column":50},"end":{"row":85,"column":51},"action":"insert","lines":["o"]},{"start":{"row":85,"column":51},"end":{"row":85,"column":52},"action":"insert","lines":["n"]}],[{"start":{"row":85,"column":52},"end":{"row":85,"column":53},"action":"insert","lines":[" "],"id":27},{"start":{"row":85,"column":53},"end":{"row":85,"column":54},"action":"insert","lines":["l"]},{"start":{"row":85,"column":54},"end":{"row":85,"column":55},"action":"insert","lines":["e"]},{"start":{"row":85,"column":55},"end":{"row":85,"column":56},"action":"insert","lines":["a"]},{"start":{"row":85,"column":56},"end":{"row":85,"column":57},"action":"insert","lines":["v"]},{"start":{"row":85,"column":57},"end":{"row":85,"column":58},"action":"insert","lines":["e"]},{"start":{"row":85,"column":58},"end":{"row":85,"column":59},"action":"insert","lines":["s"]}],[{"start":{"row":85,"column":59},"end":{"row":85,"column":60},"action":"insert","lines":[" "],"id":28},{"start":{"row":85,"column":60},"end":{"row":85,"column":61},"action":"insert","lines":["i"]},{"start":{"row":85,"column":61},"end":{"row":85,"column":62},"action":"insert","lines":["t"]}],[{"start":{"row":85,"column":62},"end":{"row":85,"column":63},"action":"insert","lines":[" "],"id":29},{"start":{"row":85,"column":63},"end":{"row":85,"column":64},"action":"insert","lines":["p"]}],[{"start":{"row":85,"column":63},"end":{"row":85,"column":64},"action":"remove","lines":["p"],"id":30}],[{"start":{"row":85,"column":63},"end":{"row":85,"column":64},"action":"insert","lines":["b"],"id":31},{"start":{"row":85,"column":64},"end":{"row":85,"column":65},"action":"insert","lines":["l"]},{"start":{"row":85,"column":65},"end":{"row":85,"column":66},"action":"insert","lines":["a"]},{"start":{"row":85,"column":66},"end":{"row":85,"column":67},"action":"insert","lines":["n"]},{"start":{"row":85,"column":67},"end":{"row":85,"column":68},"action":"insert","lines":["k"]}],[{"start":{"row":85,"column":68},"end":{"row":85,"column":69},"action":"insert","lines":[" "],"id":32}]]},"ace":{"folds":[],"scrolltop":1301.5,"scrollleft":0,"selection":{"start":{"row":102,"column":17},"end":{"row":102,"column":17},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":80,"state":"start","mode":"ace/mode/python"}},"timestamp":1575902931243,"hash":"e3f5cde30a891e465192d2f7b52cd4f7ae2c052e"}